name: Store Bug Reports in Project

on:
  issues:
    types: [opened]

jobs:
  store-in-project:
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue is a Bug Report
        id: check_bug_report
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const template = /<!--\s*Bug Report\s*-->/i;
            const isBugReport = template.test(issue.body);
            return { isBugReport };

      - name: Add issue to project
        if: steps.check_bug_report.outputs.isBugReport
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
            const issue_number = context.payload.issue.number;
            const project_number = 6; // Replace with your project number
            const column_name = "Todo"; // Replace with your column name
            const { data: columns } = await octokit.projects.listColumns({
              project_id: project_number,
            });
            const column = columns.find((c) => c.name === column_name);
            if (!column) {
              throw new Error(`Column not found: ${column_name}`);
            }
            await octokit.projects.createCard({
              column_id: column.id,
              content_id: issue_number,
              content_type: "Issue",
            });